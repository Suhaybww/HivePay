services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    env_file: .env
    volumes:
      - ./logs:/app/logs
    networks:
      - hivepay-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "node", "-e", "try { require('bull'); console.log('Bull health check passed'); process.exit(0); } catch(e) { console.error(e); process.exit(1); }"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  queue-worker:
    build:
      context: .
      target: app
    command: ["node", "bootstrap.js"]
    env_file: .env
    volumes:
      - ./logs:/app/logs
    networks:
      - hivepay-network
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Queue worker healthcheck'); process.exit(0)"]
      interval: 60s
      timeout: 20s
      retries: 3
      start_period: 30s

  queue-worker-backup:
    build:
      context: .
      target: app
    command: ["node", "bootstrap.js"]
    env_file: .env
    volumes:
      - ./logs:/app/logs
    networks:
      - hivepay-network
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        window: 120s
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Queue worker backup healthcheck'); process.exit(0)"]
      interval: 90s
      timeout: 20s
      retries: 3
      start_period: 45s

  queue-monitor:
    build:
      context: .
      target: monitor
    command: ["node", "queueMonitor.js"]
    env_file: .env
    ports:
      - "3001:3001"
    volumes:
      - ./logs:/app/logs
      - ./queueMonitor.js:/app/queueMonitor.js
    networks:
      - hivepay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    depends_on:
      - app
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - hivepay-network
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - hivepay-network
    ports:
      - "3002:3000"
    depends_on:
      - prometheus
    restart: always

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
    networks:
      - hivepay-network
    ports:
      - "80:80"
    depends_on:
      - app
      - queue-monitor
      - prometheus
      - grafana
    restart: always
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      /bin/sh -c "
      apk add --no-cache apache2-utils &&
      mkdir -p /etc/nginx &&
      htpasswd -bc /etc/nginx/.htpasswd admin secure_password &&
      nginx -g 'daemon off;'
      "

networks:
  hivepay-network:
    name: hivepay-network
    driver: bridge

volumes:
  grafana-data:
    name: hivepay-grafana-data
