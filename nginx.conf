# nginx.conf
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

worker_rlimit_nofile 65535;
events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Connection header for WebSocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";
    add_header Referrer-Policy same-origin;

    # Server configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Max body size for file uploads
        client_max_body_size 10M;
        
        # Common favicon location
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }

        # Static root path - default app
        location / {
            auth_basic "Protected Area";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://app:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_buffering off;
            proxy_read_timeout 300s;
        }

        # Queue Monitor - fix trailing slash
        location = /queue-monitor {
            return 301 $scheme://$host/queue-monitor/;
        }

        location /queue-monitor/ {
            auth_basic "Queue Monitor";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://queue-monitor:3001/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API access
        location /api/ {
            auth_basic "API Authentication";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://queue-monitor:3001/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Metrics endpoint
        location /metrics {
            auth_basic "Metrics Authentication";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://queue-monitor:3001/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://queue-monitor:3001/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            access_log off;
        }

        # Direct access to all services instead of trying to proxy
        location /direct/ {
            return 200 'Available direct URLs:<br>
                        <a href="http://localhost:3002">Grafana (port 3002)</a><br>
                        <a href="http://localhost:9090">Prometheus (port 9090)</a><br>
                        <a href="http://localhost:3001">Queue Monitor (port 3001)</a><br>
                        <a href="http://localhost:3001/metrics">Metrics (port 3001/metrics)</a><br>
                        <a href="http://localhost:3001/health">Health (port 3001/health)</a>';
            default_type text/html;
        }

        # Deny access to . files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
